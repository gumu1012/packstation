# Copyright (C) 2021 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# siehe app.module.ts

schema {
  query: Query
  mutation: Mutation
}

"Funktionen, um Bücherdaten zu lesen"
type Query {
  packstationen(suchkriterien: SuchkriterienInput): [Packstation!]

  packstation(id: ID!): Packstation
}

"Funktionen, um Bücher neu anzulegen, zu aktualisieren oder zu löschen"
type Mutation {
  create(input: PackstationInput!): CreatePayload

  update(input: PackstationUpdateInput!): UpdatePayload

  delete(id: ID!): Boolean

  # Mutation, wenn z.B. der Login-Zeitpunkt im IDM-System gespeichert wird
  token(username: String!, password: String!): TokenResult
  refresh(refresh_token: String!): TokenResult
}

"Daten zum Titel eines Buches"
type Titel {
  titel: String!
  untertitel: String
}

"Daten zum Titel eines Buches"
type Abbildung {
  beschriftung: String!
  contentType: String
}

"Daten zur Adresse einer Packstation"
type Adresse {
  strasse: String
  hausnummer: String
  postleitzahl: String
  stadt: String
}

"Daten zum Paket einer Packstation"
type Paket {
  nummer: String
  maxGewichtInKg: Float
}

"Datenschema zu einer Packstation, die gelesen wird"
type Packstation {
  # ID ist bei Apollo ein String
  id: Int!
  version: Int!
  nummer: String!
  baudatum: String
  ausstattung: [String]
  # 1:1-Beziehung
  adresse: Adresse!
}

"Suchkriterien für Packstationen"
input SuchkriterienInput {
  nummer: String
  hatPakete: Boolean
  stadt: String
}

"Daten zur Adresse einer neuen Packstation"
input AdresseInput {
  strasse: String
  hausnummer: String
  postleitzahl: String
  stadt: String!
}

"Daten zu den Paketen einer Packstation"
input PaketInput {
  nummer: String!
  maxGewichtInKg: Float
}

"Daten für eine neue Packstation"
input PackstationInput {
  nummer: String!
  baudatum: String
  ausstattung: [String]
  adresse: AdresseInput!
  pakete: [PaketInput!]
}

type CreatePayload {
  id: Int
}

"Daten für eine zu ändernde Packstation"
input PackstationUpdateInput {
  id: ID!
  version: Int!
  nummer: String!
  baudatum: String
  ausstattung: [String]
}

type UpdatePayload {
  version: Int
}

type TokenResult {
  access_token: String!
  expires_in: Int!
  refresh_token: String!
  refresh_expires_in: Int!
}
